@model Periodicals.ViewModels.ReplenishmentViewModel

@{
    ViewBag.Title = "Пополнение счета";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Пополнение счета</h2>

@using (Html.BeginForm("Create", "Replenishments", FormMethod.Post, new { @id = "contactfrm", onsubmit = "validateForm()" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfCard, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfCard, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumberOfCard, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cvc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cvc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cvc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.NameOfCard, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.NameOfCard, new SelectList(
                  new List<Object>{
                       new { value = "MasterCard" , text = "MasterCard"  },
                       new { value = "Maestro" , text = "Maestro" },
                       new { value = "Visa" , text = "Visa" },
                       new { value = "Visa PLUS" , text = "Visa PLUS"},
                    },
                  "value",
                  "text",
                   "MasterCard"), htmlAttributes: new { @class = "form-control" })
               
               
                @Html.ValidationMessageFor(model => model.NameOfCard, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ОК" class="btn btn-default" id="op-accept"/>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Назад", "Index", "PersonalAccounts", null, htmlAttributes: new { @class = "btn btn-default" })
</div>

